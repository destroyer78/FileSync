//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("filesyncModel", "FK_Files_Contents", "Contents", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FileSyncWcfService.Content), "Files", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FileSyncWcfService.File), true)]
[assembly: EdmRelationshipAttribute("filesyncModel", "FK_Dirs_Dirs", "Dirs", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FileSyncWcfService.Dir), "Dirs1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FileSyncWcfService.Dir), true)]
[assembly: EdmRelationshipAttribute("filesyncModel", "FK_Dirs_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FileSyncWcfService.User), "Dirs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FileSyncWcfService.Dir), true)]
[assembly: EdmRelationshipAttribute("filesyncModel", "FK_DirUsers_Dirs", "Dirs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FileSyncWcfService.Dir), "DirUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FileSyncWcfService.DirUser), true)]
[assembly: EdmRelationshipAttribute("filesyncModel", "FK_Files_Dirs", "Dirs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FileSyncWcfService.Dir), "Files", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FileSyncWcfService.File), true)]
[assembly: EdmRelationshipAttribute("filesyncModel", "FK_MachineDirs_Dirs", "Dirs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FileSyncWcfService.Dir), "MachineDirs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FileSyncWcfService.MachineDir), true)]
[assembly: EdmRelationshipAttribute("filesyncModel", "FK_DirUsers_Rights", "Rights", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FileSyncWcfService.Right), "DirUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FileSyncWcfService.DirUser), true)]
[assembly: EdmRelationshipAttribute("filesyncModel", "FK_DirUsers_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FileSyncWcfService.User), "DirUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FileSyncWcfService.DirUser), true)]
[assembly: EdmRelationshipAttribute("filesyncModel", "FK_Files_Types", "Types", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FileSyncWcfService.Type), "Files", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FileSyncWcfService.File), true)]
[assembly: EdmRelationshipAttribute("filesyncModel", "FK_MachineDirs_Machines", "Machines", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FileSyncWcfService.Machine), "MachineDirs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FileSyncWcfService.MachineDir), true)]
[assembly: EdmRelationshipAttribute("filesyncModel", "FK_Machines_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FileSyncWcfService.User), "Machines", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FileSyncWcfService.Machine), true)]

#endregion

namespace FileSyncWcfService
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class filesyncEntitiesNew : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new filesyncEntitiesNew object using the connection string found in the 'filesyncEntitiesNew' section of the application configuration file.
        /// </summary>
        public filesyncEntitiesNew() : base("name=filesyncEntitiesNew", "filesyncEntitiesNew")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new filesyncEntitiesNew object.
        /// </summary>
        public filesyncEntitiesNew(string connectionString) : base(connectionString, "filesyncEntitiesNew")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new filesyncEntitiesNew object.
        /// </summary>
        public filesyncEntitiesNew(EntityConnection connection) : base(connection, "filesyncEntitiesNew")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Content> Contents
        {
            get
            {
                if ((_Contents == null))
                {
                    _Contents = base.CreateObjectSet<Content>("Contents");
                }
                return _Contents;
            }
        }
        private ObjectSet<Content> _Contents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Dir> Dirs
        {
            get
            {
                if ((_Dirs == null))
                {
                    _Dirs = base.CreateObjectSet<Dir>("Dirs");
                }
                return _Dirs;
            }
        }
        private ObjectSet<Dir> _Dirs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DirUser> DirUsers
        {
            get
            {
                if ((_DirUsers == null))
                {
                    _DirUsers = base.CreateObjectSet<DirUser>("DirUsers");
                }
                return _DirUsers;
            }
        }
        private ObjectSet<DirUser> _DirUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<File> Files
        {
            get
            {
                if ((_Files == null))
                {
                    _Files = base.CreateObjectSet<File>("Files");
                }
                return _Files;
            }
        }
        private ObjectSet<File> _Files;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MachineDir> MachineDirs
        {
            get
            {
                if ((_MachineDirs == null))
                {
                    _MachineDirs = base.CreateObjectSet<MachineDir>("MachineDirs");
                }
                return _MachineDirs;
            }
        }
        private ObjectSet<MachineDir> _MachineDirs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Machine> Machines
        {
            get
            {
                if ((_Machines == null))
                {
                    _Machines = base.CreateObjectSet<Machine>("Machines");
                }
                return _Machines;
            }
        }
        private ObjectSet<Machine> _Machines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Right> Rights
        {
            get
            {
                if ((_Rights == null))
                {
                    _Rights = base.CreateObjectSet<Right>("Rights");
                }
                return _Rights;
            }
        }
        private ObjectSet<Right> _Rights;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Type> Types
        {
            get
            {
                if ((_Types == null))
                {
                    _Types = base.CreateObjectSet<Type>("Types");
                }
                return _Types;
            }
        }
        private ObjectSet<Type> _Types;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContents(Content content)
        {
            base.AddObject("Contents", content);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Dirs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirs(Dir dir)
        {
            base.AddObject("Dirs", dir);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DirUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirUsers(DirUser dirUser)
        {
            base.AddObject("DirUsers", dirUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Files EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFiles(File file)
        {
            base.AddObject("Files", file);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MachineDirs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMachineDirs(MachineDir machineDir)
        {
            base.AddObject("MachineDirs", machineDir);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Machines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMachines(Machine machine)
        {
            base.AddObject("Machines", machine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rights EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRights(Right right)
        {
            base.AddObject("Rights", right);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Types EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTypes(Type type)
        {
            base.AddObject("Types", type);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="filesyncModel", Name="Content")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Content : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Content object.
        /// </summary>
        /// <param name="content_id">Initial value of the content_id property.</param>
        /// <param name="content_data">Initial value of the content_data property.</param>
        public static Content CreateContent(global::System.Int32 content_id, global::System.Byte[] content_data)
        {
            Content content = new Content();
            content.content_id = content_id;
            content.content_data = content_data;
            return content;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 content_id
        {
            get
            {
                return _content_id;
            }
            set
            {
                if (_content_id != value)
                {
                    Oncontent_idChanging(value);
                    ReportPropertyChanging("content_id");
                    _content_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("content_id");
                    Oncontent_idChanged();
                }
            }
        }
        private global::System.Int32 _content_id;
        partial void Oncontent_idChanging(global::System.Int32 value);
        partial void Oncontent_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] content_data
        {
            get
            {
                return StructuralObject.GetValidValue(_content_data);
            }
            set
            {
                Oncontent_dataChanging(value);
                ReportPropertyChanging("content_data");
                _content_data = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("content_data");
                Oncontent_dataChanged();
            }
        }
        private global::System.Byte[] _content_data;
        partial void Oncontent_dataChanging(global::System.Byte[] value);
        partial void Oncontent_dataChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_Files_Contents", "Files")]
        public EntityCollection<File> Files
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("filesyncModel.FK_Files_Contents", "Files");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("filesyncModel.FK_Files_Contents", "Files", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="filesyncModel", Name="Dir")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dir : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Dir object.
        /// </summary>
        /// <param name="dir_id">Initial value of the dir_id property.</param>
        /// <param name="dir_name">Initial value of the dir_name property.</param>
        /// <param name="user_ownerid">Initial value of the user_ownerid property.</param>
        public static Dir CreateDir(global::System.Int32 dir_id, global::System.String dir_name, global::System.Int32 user_ownerid)
        {
            Dir dir = new Dir();
            dir.dir_id = dir_id;
            dir.dir_name = dir_name;
            dir.user_ownerid = user_ownerid;
            return dir;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dir_id
        {
            get
            {
                return _dir_id;
            }
            set
            {
                if (_dir_id != value)
                {
                    Ondir_idChanging(value);
                    ReportPropertyChanging("dir_id");
                    _dir_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("dir_id");
                    Ondir_idChanged();
                }
            }
        }
        private global::System.Int32 _dir_id;
        partial void Ondir_idChanging(global::System.Int32 value);
        partial void Ondir_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> dir_rootdirid
        {
            get
            {
                return _dir_rootdirid;
            }
            set
            {
                Ondir_rootdiridChanging(value);
                ReportPropertyChanging("dir_rootdirid");
                _dir_rootdirid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dir_rootdirid");
                Ondir_rootdiridChanged();
            }
        }
        private Nullable<global::System.Int32> _dir_rootdirid;
        partial void Ondir_rootdiridChanging(Nullable<global::System.Int32> value);
        partial void Ondir_rootdiridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dir_name
        {
            get
            {
                return _dir_name;
            }
            set
            {
                Ondir_nameChanging(value);
                ReportPropertyChanging("dir_name");
                _dir_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("dir_name");
                Ondir_nameChanged();
            }
        }
        private global::System.String _dir_name;
        partial void Ondir_nameChanging(global::System.String value);
        partial void Ondir_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_ownerid
        {
            get
            {
                return _user_ownerid;
            }
            set
            {
                Onuser_owneridChanging(value);
                ReportPropertyChanging("user_ownerid");
                _user_ownerid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_ownerid");
                Onuser_owneridChanged();
            }
        }
        private global::System.Int32 _user_ownerid;
        partial void Onuser_owneridChanging(global::System.Int32 value);
        partial void Onuser_owneridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String dir_description
        {
            get
            {
                return _dir_description;
            }
            set
            {
                Ondir_descriptionChanging(value);
                ReportPropertyChanging("dir_description");
                _dir_description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("dir_description");
                Ondir_descriptionChanged();
            }
        }
        private global::System.String _dir_description;
        partial void Ondir_descriptionChanging(global::System.String value);
        partial void Ondir_descriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_Dirs_Dirs", "Dirs1")]
        public EntityCollection<Dir> Dirs1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dir>("filesyncModel.FK_Dirs_Dirs", "Dirs1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dir>("filesyncModel.FK_Dirs_Dirs", "Dirs1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_Dirs_Dirs", "Dirs")]
        public Dir Dir1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dir>("filesyncModel.FK_Dirs_Dirs", "Dirs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dir>("filesyncModel.FK_Dirs_Dirs", "Dirs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dir> Dir1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dir>("filesyncModel.FK_Dirs_Dirs", "Dirs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dir>("filesyncModel.FK_Dirs_Dirs", "Dirs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_Dirs_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("filesyncModel.FK_Dirs_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("filesyncModel.FK_Dirs_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("filesyncModel.FK_Dirs_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("filesyncModel.FK_Dirs_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_DirUsers_Dirs", "DirUsers")]
        public EntityCollection<DirUser> DirUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DirUser>("filesyncModel.FK_DirUsers_Dirs", "DirUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DirUser>("filesyncModel.FK_DirUsers_Dirs", "DirUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_Files_Dirs", "Files")]
        public EntityCollection<File> Files
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("filesyncModel.FK_Files_Dirs", "Files");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("filesyncModel.FK_Files_Dirs", "Files", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_MachineDirs_Dirs", "MachineDirs")]
        public EntityCollection<MachineDir> MachineDirs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MachineDir>("filesyncModel.FK_MachineDirs_Dirs", "MachineDirs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MachineDir>("filesyncModel.FK_MachineDirs_Dirs", "MachineDirs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="filesyncModel", Name="DirUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DirUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DirUser object.
        /// </summary>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="dir_id">Initial value of the dir_id property.</param>
        /// <param name="right_id">Initial value of the right_id property.</param>
        public static DirUser CreateDirUser(global::System.Int32 user_id, global::System.Int32 dir_id, global::System.Int32 right_id)
        {
            DirUser dirUser = new DirUser();
            dirUser.user_id = user_id;
            dirUser.dir_id = dir_id;
            dirUser.right_id = right_id;
            return dirUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                if (_user_id != value)
                {
                    Onuser_idChanging(value);
                    ReportPropertyChanging("user_id");
                    _user_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("user_id");
                    Onuser_idChanged();
                }
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dir_id
        {
            get
            {
                return _dir_id;
            }
            set
            {
                if (_dir_id != value)
                {
                    Ondir_idChanging(value);
                    ReportPropertyChanging("dir_id");
                    _dir_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("dir_id");
                    Ondir_idChanged();
                }
            }
        }
        private global::System.Int32 _dir_id;
        partial void Ondir_idChanging(global::System.Int32 value);
        partial void Ondir_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 right_id
        {
            get
            {
                return _right_id;
            }
            set
            {
                Onright_idChanging(value);
                ReportPropertyChanging("right_id");
                _right_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("right_id");
                Onright_idChanged();
            }
        }
        private global::System.Int32 _right_id;
        partial void Onright_idChanging(global::System.Int32 value);
        partial void Onright_idChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_DirUsers_Dirs", "Dirs")]
        public Dir Dir
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dir>("filesyncModel.FK_DirUsers_Dirs", "Dirs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dir>("filesyncModel.FK_DirUsers_Dirs", "Dirs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dir> DirReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dir>("filesyncModel.FK_DirUsers_Dirs", "Dirs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dir>("filesyncModel.FK_DirUsers_Dirs", "Dirs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_DirUsers_Rights", "Rights")]
        public Right Right
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Right>("filesyncModel.FK_DirUsers_Rights", "Rights").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Right>("filesyncModel.FK_DirUsers_Rights", "Rights").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Right> RightReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Right>("filesyncModel.FK_DirUsers_Rights", "Rights");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Right>("filesyncModel.FK_DirUsers_Rights", "Rights", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_DirUsers_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("filesyncModel.FK_DirUsers_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("filesyncModel.FK_DirUsers_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("filesyncModel.FK_DirUsers_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("filesyncModel.FK_DirUsers_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="filesyncModel", Name="File")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class File : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new File object.
        /// </summary>
        /// <param name="file_id">Initial value of the file_id property.</param>
        /// <param name="dir_id">Initial value of the dir_id property.</param>
        /// <param name="type_id">Initial value of the type_id property.</param>
        /// <param name="content_id">Initial value of the content_id property.</param>
        /// <param name="file_name">Initial value of the file_name property.</param>
        /// <param name="file_size">Initial value of the file_size property.</param>
        /// <param name="file_hash">Initial value of the file_hash property.</param>
        /// <param name="file_uploaded">Initial value of the file_uploaded property.</param>
        /// <param name="file_modified">Initial value of the file_modified property.</param>
        public static File CreateFile(global::System.Int32 file_id, global::System.Int32 dir_id, global::System.Int32 type_id, global::System.Int32 content_id, global::System.String file_name, global::System.Int64 file_size, global::System.String file_hash, global::System.DateTime file_uploaded, global::System.DateTime file_modified)
        {
            File file = new File();
            file.file_id = file_id;
            file.dir_id = dir_id;
            file.type_id = type_id;
            file.content_id = content_id;
            file.file_name = file_name;
            file.file_size = file_size;
            file.file_hash = file_hash;
            file.file_uploaded = file_uploaded;
            file.file_modified = file_modified;
            return file;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 file_id
        {
            get
            {
                return _file_id;
            }
            set
            {
                if (_file_id != value)
                {
                    Onfile_idChanging(value);
                    ReportPropertyChanging("file_id");
                    _file_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("file_id");
                    Onfile_idChanged();
                }
            }
        }
        private global::System.Int32 _file_id;
        partial void Onfile_idChanging(global::System.Int32 value);
        partial void Onfile_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dir_id
        {
            get
            {
                return _dir_id;
            }
            set
            {
                Ondir_idChanging(value);
                ReportPropertyChanging("dir_id");
                _dir_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dir_id");
                Ondir_idChanged();
            }
        }
        private global::System.Int32 _dir_id;
        partial void Ondir_idChanging(global::System.Int32 value);
        partial void Ondir_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 type_id
        {
            get
            {
                return _type_id;
            }
            set
            {
                Ontype_idChanging(value);
                ReportPropertyChanging("type_id");
                _type_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("type_id");
                Ontype_idChanged();
            }
        }
        private global::System.Int32 _type_id;
        partial void Ontype_idChanging(global::System.Int32 value);
        partial void Ontype_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 content_id
        {
            get
            {
                return _content_id;
            }
            set
            {
                Oncontent_idChanging(value);
                ReportPropertyChanging("content_id");
                _content_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("content_id");
                Oncontent_idChanged();
            }
        }
        private global::System.Int32 _content_id;
        partial void Oncontent_idChanging(global::System.Int32 value);
        partial void Oncontent_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String file_name
        {
            get
            {
                return _file_name;
            }
            set
            {
                Onfile_nameChanging(value);
                ReportPropertyChanging("file_name");
                _file_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("file_name");
                Onfile_nameChanged();
            }
        }
        private global::System.String _file_name;
        partial void Onfile_nameChanging(global::System.String value);
        partial void Onfile_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 file_size
        {
            get
            {
                return _file_size;
            }
            set
            {
                Onfile_sizeChanging(value);
                ReportPropertyChanging("file_size");
                _file_size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("file_size");
                Onfile_sizeChanged();
            }
        }
        private global::System.Int64 _file_size;
        partial void Onfile_sizeChanging(global::System.Int64 value);
        partial void Onfile_sizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String file_hash
        {
            get
            {
                return _file_hash;
            }
            set
            {
                Onfile_hashChanging(value);
                ReportPropertyChanging("file_hash");
                _file_hash = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("file_hash");
                Onfile_hashChanged();
            }
        }
        private global::System.String _file_hash;
        partial void Onfile_hashChanging(global::System.String value);
        partial void Onfile_hashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime file_uploaded
        {
            get
            {
                return _file_uploaded;
            }
            set
            {
                Onfile_uploadedChanging(value);
                ReportPropertyChanging("file_uploaded");
                _file_uploaded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("file_uploaded");
                Onfile_uploadedChanged();
            }
        }
        private global::System.DateTime _file_uploaded;
        partial void Onfile_uploadedChanging(global::System.DateTime value);
        partial void Onfile_uploadedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime file_modified
        {
            get
            {
                return _file_modified;
            }
            set
            {
                Onfile_modifiedChanging(value);
                ReportPropertyChanging("file_modified");
                _file_modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("file_modified");
                Onfile_modifiedChanged();
            }
        }
        private global::System.DateTime _file_modified;
        partial void Onfile_modifiedChanging(global::System.DateTime value);
        partial void Onfile_modifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_Files_Contents", "Contents")]
        public Content Content
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Content>("filesyncModel.FK_Files_Contents", "Contents").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Content>("filesyncModel.FK_Files_Contents", "Contents").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Content> ContentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Content>("filesyncModel.FK_Files_Contents", "Contents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Content>("filesyncModel.FK_Files_Contents", "Contents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_Files_Dirs", "Dirs")]
        public Dir Dir
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dir>("filesyncModel.FK_Files_Dirs", "Dirs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dir>("filesyncModel.FK_Files_Dirs", "Dirs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dir> DirReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dir>("filesyncModel.FK_Files_Dirs", "Dirs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dir>("filesyncModel.FK_Files_Dirs", "Dirs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_Files_Types", "Types")]
        public Type Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Type>("filesyncModel.FK_Files_Types", "Types").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Type>("filesyncModel.FK_Files_Types", "Types").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Type> TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Type>("filesyncModel.FK_Files_Types", "Types");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Type>("filesyncModel.FK_Files_Types", "Types", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="filesyncModel", Name="Machine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Machine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Machine object.
        /// </summary>
        /// <param name="machine_id">Initial value of the machine_id property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="machine_name">Initial value of the machine_name property.</param>
        public static Machine CreateMachine(global::System.Int32 machine_id, global::System.Int32 user_id, global::System.String machine_name)
        {
            Machine machine = new Machine();
            machine.machine_id = machine_id;
            machine.user_id = user_id;
            machine.machine_name = machine_name;
            return machine;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 machine_id
        {
            get
            {
                return _machine_id;
            }
            set
            {
                if (_machine_id != value)
                {
                    Onmachine_idChanging(value);
                    ReportPropertyChanging("machine_id");
                    _machine_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("machine_id");
                    Onmachine_idChanged();
                }
            }
        }
        private global::System.Int32 _machine_id;
        partial void Onmachine_idChanging(global::System.Int32 value);
        partial void Onmachine_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String machine_name
        {
            get
            {
                return _machine_name;
            }
            set
            {
                Onmachine_nameChanging(value);
                ReportPropertyChanging("machine_name");
                _machine_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("machine_name");
                Onmachine_nameChanged();
            }
        }
        private global::System.String _machine_name;
        partial void Onmachine_nameChanging(global::System.String value);
        partial void Onmachine_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String machine_description
        {
            get
            {
                return _machine_description;
            }
            set
            {
                Onmachine_descriptionChanging(value);
                ReportPropertyChanging("machine_description");
                _machine_description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("machine_description");
                Onmachine_descriptionChanged();
            }
        }
        private global::System.String _machine_description;
        partial void Onmachine_descriptionChanging(global::System.String value);
        partial void Onmachine_descriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_MachineDirs_Machines", "MachineDirs")]
        public EntityCollection<MachineDir> MachineDirs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MachineDir>("filesyncModel.FK_MachineDirs_Machines", "MachineDirs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MachineDir>("filesyncModel.FK_MachineDirs_Machines", "MachineDirs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_Machines_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("filesyncModel.FK_Machines_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("filesyncModel.FK_Machines_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("filesyncModel.FK_Machines_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("filesyncModel.FK_Machines_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="filesyncModel", Name="MachineDir")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MachineDir : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MachineDir object.
        /// </summary>
        /// <param name="machine_id">Initial value of the machine_id property.</param>
        /// <param name="dir_id">Initial value of the dir_id property.</param>
        /// <param name="dir_realpath">Initial value of the dir_realpath property.</param>
        public static MachineDir CreateMachineDir(global::System.Int32 machine_id, global::System.Int32 dir_id, global::System.String dir_realpath)
        {
            MachineDir machineDir = new MachineDir();
            machineDir.machine_id = machine_id;
            machineDir.dir_id = dir_id;
            machineDir.dir_realpath = dir_realpath;
            return machineDir;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 machine_id
        {
            get
            {
                return _machine_id;
            }
            set
            {
                if (_machine_id != value)
                {
                    Onmachine_idChanging(value);
                    ReportPropertyChanging("machine_id");
                    _machine_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("machine_id");
                    Onmachine_idChanged();
                }
            }
        }
        private global::System.Int32 _machine_id;
        partial void Onmachine_idChanging(global::System.Int32 value);
        partial void Onmachine_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dir_id
        {
            get
            {
                return _dir_id;
            }
            set
            {
                if (_dir_id != value)
                {
                    Ondir_idChanging(value);
                    ReportPropertyChanging("dir_id");
                    _dir_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("dir_id");
                    Ondir_idChanged();
                }
            }
        }
        private global::System.Int32 _dir_id;
        partial void Ondir_idChanging(global::System.Int32 value);
        partial void Ondir_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dir_realpath
        {
            get
            {
                return _dir_realpath;
            }
            set
            {
                Ondir_realpathChanging(value);
                ReportPropertyChanging("dir_realpath");
                _dir_realpath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("dir_realpath");
                Ondir_realpathChanged();
            }
        }
        private global::System.String _dir_realpath;
        partial void Ondir_realpathChanging(global::System.String value);
        partial void Ondir_realpathChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_MachineDirs_Dirs", "Dirs")]
        public Dir Dir
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dir>("filesyncModel.FK_MachineDirs_Dirs", "Dirs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dir>("filesyncModel.FK_MachineDirs_Dirs", "Dirs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dir> DirReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dir>("filesyncModel.FK_MachineDirs_Dirs", "Dirs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dir>("filesyncModel.FK_MachineDirs_Dirs", "Dirs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_MachineDirs_Machines", "Machines")]
        public Machine Machine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Machine>("filesyncModel.FK_MachineDirs_Machines", "Machines").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Machine>("filesyncModel.FK_MachineDirs_Machines", "Machines").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Machine> MachineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Machine>("filesyncModel.FK_MachineDirs_Machines", "Machines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Machine>("filesyncModel.FK_MachineDirs_Machines", "Machines", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="filesyncModel", Name="Right")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Right : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Right object.
        /// </summary>
        /// <param name="right_id">Initial value of the right_id property.</param>
        /// <param name="right_name">Initial value of the right_name property.</param>
        public static Right CreateRight(global::System.Int32 right_id, global::System.String right_name)
        {
            Right right = new Right();
            right.right_id = right_id;
            right.right_name = right_name;
            return right;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 right_id
        {
            get
            {
                return _right_id;
            }
            set
            {
                if (_right_id != value)
                {
                    Onright_idChanging(value);
                    ReportPropertyChanging("right_id");
                    _right_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("right_id");
                    Onright_idChanged();
                }
            }
        }
        private global::System.Int32 _right_id;
        partial void Onright_idChanging(global::System.Int32 value);
        partial void Onright_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String right_name
        {
            get
            {
                return _right_name;
            }
            set
            {
                Onright_nameChanging(value);
                ReportPropertyChanging("right_name");
                _right_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("right_name");
                Onright_nameChanged();
            }
        }
        private global::System.String _right_name;
        partial void Onright_nameChanging(global::System.String value);
        partial void Onright_nameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_DirUsers_Rights", "DirUsers")]
        public EntityCollection<DirUser> DirUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DirUser>("filesyncModel.FK_DirUsers_Rights", "DirUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DirUser>("filesyncModel.FK_DirUsers_Rights", "DirUsers", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="filesyncModel", Name="Type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Type : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Type object.
        /// </summary>
        /// <param name="type_id">Initial value of the type_id property.</param>
        /// <param name="type_name">Initial value of the type_name property.</param>
        public static Type CreateType(global::System.Int32 type_id, global::System.String type_name)
        {
            Type type = new Type();
            type.type_id = type_id;
            type.type_name = type_name;
            return type;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 type_id
        {
            get
            {
                return _type_id;
            }
            set
            {
                if (_type_id != value)
                {
                    Ontype_idChanging(value);
                    ReportPropertyChanging("type_id");
                    _type_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("type_id");
                    Ontype_idChanged();
                }
            }
        }
        private global::System.Int32 _type_id;
        partial void Ontype_idChanging(global::System.Int32 value);
        partial void Ontype_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type_name
        {
            get
            {
                return _type_name;
            }
            set
            {
                Ontype_nameChanging(value);
                ReportPropertyChanging("type_name");
                _type_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("type_name");
                Ontype_nameChanged();
            }
        }
        private global::System.String _type_name;
        partial void Ontype_nameChanging(global::System.String value);
        partial void Ontype_nameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_Files_Types", "Files")]
        public EntityCollection<File> Files
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("filesyncModel.FK_Files_Types", "Files");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("filesyncModel.FK_Files_Types", "Files", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="filesyncModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="user_login">Initial value of the user_login property.</param>
        /// <param name="user_pass">Initial value of the user_pass property.</param>
        public static User CreateUser(global::System.Int32 user_id, global::System.String user_login, global::System.String user_pass)
        {
            User user = new User();
            user.user_id = user_id;
            user.user_login = user_login;
            user.user_pass = user_pass;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                if (_user_id != value)
                {
                    Onuser_idChanging(value);
                    ReportPropertyChanging("user_id");
                    _user_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("user_id");
                    Onuser_idChanged();
                }
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_login
        {
            get
            {
                return _user_login;
            }
            set
            {
                Onuser_loginChanging(value);
                ReportPropertyChanging("user_login");
                _user_login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("user_login");
                Onuser_loginChanged();
            }
        }
        private global::System.String _user_login;
        partial void Onuser_loginChanging(global::System.String value);
        partial void Onuser_loginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_pass
        {
            get
            {
                return _user_pass;
            }
            set
            {
                Onuser_passChanging(value);
                ReportPropertyChanging("user_pass");
                _user_pass = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("user_pass");
                Onuser_passChanged();
            }
        }
        private global::System.String _user_pass;
        partial void Onuser_passChanging(global::System.String value);
        partial void Onuser_passChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_fullname
        {
            get
            {
                return _user_fullname;
            }
            set
            {
                Onuser_fullnameChanging(value);
                ReportPropertyChanging("user_fullname");
                _user_fullname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("user_fullname");
                Onuser_fullnameChanged();
            }
        }
        private global::System.String _user_fullname;
        partial void Onuser_fullnameChanging(global::System.String value);
        partial void Onuser_fullnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_email
        {
            get
            {
                return _user_email;
            }
            set
            {
                Onuser_emailChanging(value);
                ReportPropertyChanging("user_email");
                _user_email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("user_email");
                Onuser_emailChanged();
            }
        }
        private global::System.String _user_email;
        partial void Onuser_emailChanging(global::System.String value);
        partial void Onuser_emailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> user_lastlogin
        {
            get
            {
                return _user_lastlogin;
            }
            set
            {
                Onuser_lastloginChanging(value);
                ReportPropertyChanging("user_lastlogin");
                _user_lastlogin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_lastlogin");
                Onuser_lastloginChanged();
            }
        }
        private Nullable<global::System.DateTime> _user_lastlogin;
        partial void Onuser_lastloginChanging(Nullable<global::System.DateTime> value);
        partial void Onuser_lastloginChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_Dirs_Users", "Dirs")]
        public EntityCollection<Dir> Dirs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dir>("filesyncModel.FK_Dirs_Users", "Dirs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dir>("filesyncModel.FK_Dirs_Users", "Dirs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_DirUsers_Users", "DirUsers")]
        public EntityCollection<DirUser> DirUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DirUser>("filesyncModel.FK_DirUsers_Users", "DirUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DirUser>("filesyncModel.FK_DirUsers_Users", "DirUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("filesyncModel", "FK_Machines_Users", "Machines")]
        public EntityCollection<Machine> Machines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Machine>("filesyncModel.FK_Machines_Users", "Machines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Machine>("filesyncModel.FK_Machines_Users", "Machines", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
